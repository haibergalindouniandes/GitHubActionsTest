name: Merge Automatizado Master-Main
on:
  pull_request:
    types: [ opened, labeled, unlabeled, synchronize, edited, ready_for_review, reopened ]
    branches: [master]
jobs:
  job_pruebas_automaticas:
    name: Ejecución Pruebas Automatizadas
    runs-on: windows-latest
    outputs:
      mensaje-commit: ${{ steps.obtener-mensaje-commit.outputs.commit-msg }}
    steps:
      - name: Checkout de repositorio
        uses: actions/checkout@v2
      - name: Obtener mensaje del pull request
        id: obtener-mensaje-commit
        run: echo "::set-output name=commit-msg::${{ github.event.head_commit.message }}"  
      - name: Configuracion de entorno de python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Instalacion de librerias y dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Correr pruebas automatizadas
        id: correr-pruebas-automatizadas
        run: python -m unittest discover -s tests
      - name: Validar resultado con errores
        if: '${{ failure() }}'
        env:
          MENSAJE_ERROR: Una o varias pruebas fallaron
        run: 'echo "::set-output name=respuesta::${MENSAJE_ERROR}"'
      - name: Validar resultado sin errores
        if: '${{ success() }}'
        env:
          MENSAJE_EXITO: Todas las pruebas fueron exitosas
        run: 'echo "::set-output name=respuesta::${MENSAJE_EXITO}"'
      - name: Cálculo de cubrimiento
        id: cubrimiento
        run: |
          coverage run -m unittest discover -s tests
          coverage report -m  

  job_creacion_rama_release:
    if: ${{ contains(github.event.pull_request.title, '[Build_PR]') }}
    name: Ejecución Push Automatizado
    needs: job_pruebas_automaticas
    runs-on: ubuntu-latest
    steps:
      - name: Checkout de repositorio
        uses: actions/checkout@v2
      - name: Configuración git
        run: |
          git config user.name "$(git log -n 1 --pretty=format:%an)"
          git config user.email "$(git log -n 1 --pretty=format:%ae)"        
      - name: Creación De Rama Release Automatizada 
        run: |
          git checkout -b release
          git push -f -u origin release  

  job_auto_merge_release:
    if: ${{ contains(github.event.pull_request.title, '[Build_PR]') }}
    name: Ejecución Merge Automatizado Release
    needs: job_creacion_rama_release
    runs-on: ubuntu-latest
    steps:
      - name: Ejecución Merge Automatizado
        id: merge-automatizado
        uses: tukasz/direct-merge-action@master
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          owner: ${{ github.actor }}
          source-branch: develop
          target-branch: release
          commit-message: "[Merge automatico] ${{ github.event.pull_request.title }}"

  job_auto_merge_master:
    if: ${{ contains(github.event.pull_request.title, '[Build_PR]') }}
    name: Ejecución Merge Automatizado Master
    needs: job_auto_merge_release
    runs-on: ubuntu-latest
    steps:
      - name: Ejecución Merge Automatizado
        id: merge-automatizado
        uses: tukasz/direct-merge-action@master
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          owner: ${{ github.actor }}
          source-branch: release
          target-branch: master
          commit-message: "[Merge automatico] ${{ github.event.pull_request.title }}"

  job_auto_merge_main:
    if: ${{ contains(github.event.pull_request.title, '[Build_PR]') }}
    name: Ejecución Merge Automatizado Main
    needs: job_auto_merge_master
    runs-on: ubuntu-latest
    steps:
      - name: Ejecución Merge Automatizado
        id: merge-automatizado
        uses: pascalgn/automerge-action@v0.15.3
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          MERGE_LABELS: ''
          MERGE_COMMIT_MESSAGE: "[Merge automatico] ${{ github.event.pull_request.title }}"
          MERGE_DELETE_BRANCH: true 
      - name: Retroalimentación Del Merge Hacia Main
        if: steps.merge-automatizado.outputs.mergeResult == 'merged'
        run: >
          echo "Solicitud de Merge número (${{ steps.merge-automatizado.outputs.pullRequestNumber }}) fusionada con exito!"